-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-10-09 14:55:56 MESZ
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE animals (
    animal_id             INTEGER,
    animal_name           VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    villeger_id           INTEGER,
    domesticated          RAW(2000),
    age                   INTEGER,
    competence_bonus      FLOAT,
    meat_content          FLOAT,
    villegar_villegar_id  NUMBER NOT NULL
);

CREATE TABLE disease (
    disease_id            INTEGER,
    disease_name          VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    duration_in_days      INTEGER,
    risk_of_death         FLOAT,
    competence_malus      FLOAT,
    villegar_villegar_id  NUMBER NOT NULL
);

CREATE TABLE family (
    family_id            INTEGER,
    last_name            VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    villagar_id          INTEGER,
    housing_id           INTEGER,
    family_happiness     FLOAT,
    family_id1           NUMBER NOT NULL,
    village_village_id1  NUMBER NOT NULL
);

ALTER TABLE family ADD CONSTRAINT family_pk PRIMARY KEY ( family_id1 );

CREATE TABLE housing (
    house_id           INTEGER,
    family_id          INTEGER,
    size_in_m2         INTEGER,
    condition          FLOAT,
    age                INTEGER,
    family_family_id1  NUMBER NOT NULL
);

CREATE UNIQUE INDEX housing__idx ON
    housing (
        family_family_id1
    ASC );

CREATE TABLE job (
    job_id                INTEGER,
    job_name              VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    required_competence   FLOAT,
    wage                  FLOAT,
    risk_factor           FLOAT,
    job_id1               NUMBER NOT NULL,
    villegar_villegar_id  NUMBER NOT NULL
);

CREATE UNIQUE INDEX job__idx ON
    job (
        villegar_villegar_id
    ASC );

ALTER TABLE job ADD CONSTRAINT job_pk PRIMARY KEY ( job_id1 );

CREATE TABLE location (
    location_id              INTEGER,
    location_name            VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    job_id                   INTEGER,
    condition                FLOAT,
    max_number_of_villegars  INTEGER,
    food_content             FLOAT,
    max_number_of_animals    INTEGER,
    location_id1             NUMBER NOT NULL,
    job_job_id1              NUMBER NOT NULL
);

CREATE UNIQUE INDEX location__idx ON
    location (
        job_job_id1
    ASC );

ALTER TABLE location ADD CONSTRAINT location_pk PRIMARY KEY ( location_id1 );

CREATE TABLE village (
    village_id             INTEGER,
    village_name           VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    family_id              INTEGER,
    location_id            INTEGER,
    popularity             FLOAT,
    village_id1            NUMBER NOT NULL,
    location_location_id1  NUMBER NOT NULL
);

CREATE UNIQUE INDEX village__idx ON
    village (
        location_location_id1
    ASC );

ALTER TABLE village ADD CONSTRAINT village_pk PRIMARY KEY ( village_id1 );

CREATE TABLE villegar (
    villager_id        INTEGER,
    first_name         VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    last_name          VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    sex                RAW(2000),
    age                INTEGER,
    job_id             INTEGER,
    disease_id         INTEGER,
    competence         FLOAT,
    happiness          FLOAT,
    animal_id          INTEGER,
    villegar_id        NUMBER NOT NULL,
    family_family_id1  NUMBER NOT NULL
);

ALTER TABLE villegar ADD CONSTRAINT villegar_pk PRIMARY KEY ( villegar_id );

ALTER TABLE animals
    ADD CONSTRAINT animals_villegar_fk FOREIGN KEY ( villegar_villegar_id )
        REFERENCES villegar ( villegar_id );

ALTER TABLE disease
    ADD CONSTRAINT disease_villegar_fk FOREIGN KEY ( villegar_villegar_id )
        REFERENCES villegar ( villegar_id );

ALTER TABLE family
    ADD CONSTRAINT family_village_fk FOREIGN KEY ( village_village_id1 )
        REFERENCES village ( village_id1 );

ALTER TABLE housing
    ADD CONSTRAINT housing_family_fk FOREIGN KEY ( family_family_id1 )
        REFERENCES family ( family_id1 );

ALTER TABLE job
    ADD CONSTRAINT job_villegar_fk FOREIGN KEY ( villegar_villegar_id )
        REFERENCES villegar ( villegar_id );

ALTER TABLE location
    ADD CONSTRAINT location_job_fk FOREIGN KEY ( job_job_id1 )
        REFERENCES job ( job_id1 );

ALTER TABLE village
    ADD CONSTRAINT village_location_fk FOREIGN KEY ( location_location_id1 )
        REFERENCES location ( location_id1 );

ALTER TABLE villegar
    ADD CONSTRAINT villegar_family_fk FOREIGN KEY ( family_family_id1 )
        REFERENCES family ( family_id1 );

CREATE SEQUENCE family_family_id1_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER family_family_id1_trg BEFORE
    INSERT ON family
    FOR EACH ROW
    WHEN ( new.family_id1 IS NULL )
BEGIN
    :new.family_id1 := family_family_id1_seq.nextval;
END;
/

CREATE SEQUENCE job_job_id1_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER job_job_id1_trg BEFORE
    INSERT ON job
    FOR EACH ROW
    WHEN ( new.job_id1 IS NULL )
BEGIN
    :new.job_id1 := job_job_id1_seq.nextval;
END;
/

CREATE SEQUENCE location_location_id1_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER location_location_id1_trg BEFORE
    INSERT ON location
    FOR EACH ROW
    WHEN ( new.location_id1 IS NULL )
BEGIN
    :new.location_id1 := location_location_id1_seq.nextval;
END;
/

CREATE SEQUENCE village_village_id1_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER village_village_id1_trg BEFORE
    INSERT ON village
    FOR EACH ROW
    WHEN ( new.village_id1 IS NULL )
BEGIN
    :new.village_id1 := village_village_id1_seq.nextval;
END;
/

CREATE SEQUENCE villegar_villegar_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER villegar_villegar_id_trg BEFORE
    INSERT ON villegar
    FOR EACH ROW
    WHEN ( new.villegar_id IS NULL )
BEGIN
    :new.villegar_id := villegar_villegar_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             4
-- ALTER TABLE                             13
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   8
-- WARNINGS                                 0
